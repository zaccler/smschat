// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.smsmessenger.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.smsmessenger.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAttachmentDocumentPreviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ItemAttachmentDocumentBinding documentAttachmentHolder;

  @NonNull
  public final ItemRemoveAttachmentButtonBinding removeAttachmentButtonHolder;

  @NonNull
  public final ConstraintLayout threadAttachmentWrapper;

  private ItemAttachmentDocumentPreviewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ItemAttachmentDocumentBinding documentAttachmentHolder,
      @NonNull ItemRemoveAttachmentButtonBinding removeAttachmentButtonHolder,
      @NonNull ConstraintLayout threadAttachmentWrapper) {
    this.rootView = rootView;
    this.documentAttachmentHolder = documentAttachmentHolder;
    this.removeAttachmentButtonHolder = removeAttachmentButtonHolder;
    this.threadAttachmentWrapper = threadAttachmentWrapper;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAttachmentDocumentPreviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAttachmentDocumentPreviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_attachment_document_preview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAttachmentDocumentPreviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.document_attachment_holder;
      View documentAttachmentHolder = ViewBindings.findChildViewById(rootView, id);
      if (documentAttachmentHolder == null) {
        break missingId;
      }
      ItemAttachmentDocumentBinding binding_documentAttachmentHolder = ItemAttachmentDocumentBinding.bind(documentAttachmentHolder);

      id = R.id.remove_attachment_button_holder;
      View removeAttachmentButtonHolder = ViewBindings.findChildViewById(rootView, id);
      if (removeAttachmentButtonHolder == null) {
        break missingId;
      }
      ItemRemoveAttachmentButtonBinding binding_removeAttachmentButtonHolder = ItemRemoveAttachmentButtonBinding.bind(removeAttachmentButtonHolder);

      ConstraintLayout threadAttachmentWrapper = (ConstraintLayout) rootView;

      return new ItemAttachmentDocumentPreviewBinding((ConstraintLayout) rootView,
          binding_documentAttachmentHolder, binding_removeAttachmentButtonHolder,
          threadAttachmentWrapper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
