// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.smsmessenger.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.smsmessenger.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemThreadDateTimeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView threadDateTime;

  @NonNull
  public final RelativeLayout threadDateTimeHolder;

  @NonNull
  public final ImageView threadSimIcon;

  @NonNull
  public final TextView threadSimNumber;

  private ItemThreadDateTimeBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView threadDateTime, @NonNull RelativeLayout threadDateTimeHolder,
      @NonNull ImageView threadSimIcon, @NonNull TextView threadSimNumber) {
    this.rootView = rootView;
    this.threadDateTime = threadDateTime;
    this.threadDateTimeHolder = threadDateTimeHolder;
    this.threadSimIcon = threadSimIcon;
    this.threadSimNumber = threadSimNumber;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemThreadDateTimeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemThreadDateTimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_thread_date_time, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemThreadDateTimeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.thread_date_time;
      TextView threadDateTime = ViewBindings.findChildViewById(rootView, id);
      if (threadDateTime == null) {
        break missingId;
      }

      RelativeLayout threadDateTimeHolder = (RelativeLayout) rootView;

      id = R.id.thread_sim_icon;
      ImageView threadSimIcon = ViewBindings.findChildViewById(rootView, id);
      if (threadSimIcon == null) {
        break missingId;
      }

      id = R.id.thread_sim_number;
      TextView threadSimNumber = ViewBindings.findChildViewById(rootView, id);
      if (threadSimNumber == null) {
        break missingId;
      }

      return new ItemThreadDateTimeBinding((RelativeLayout) rootView, threadDateTime,
          threadDateTimeHolder, threadSimIcon, threadSimNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
