// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.smsmessenger.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.simplemobiletools.commons.views.MyTextInputLayout;
import com.simplemobiletools.smsmessenger.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddBlockedKeywordBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputEditText addBlockedKeywordEdittext;

  @NonNull
  public final MyTextInputLayout addBlockedKeywordHint;

  @NonNull
  public final RelativeLayout dialogHolder;

  private DialogAddBlockedKeywordBinding(@NonNull RelativeLayout rootView,
      @NonNull TextInputEditText addBlockedKeywordEdittext,
      @NonNull MyTextInputLayout addBlockedKeywordHint, @NonNull RelativeLayout dialogHolder) {
    this.rootView = rootView;
    this.addBlockedKeywordEdittext = addBlockedKeywordEdittext;
    this.addBlockedKeywordHint = addBlockedKeywordHint;
    this.dialogHolder = dialogHolder;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddBlockedKeywordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddBlockedKeywordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_blocked_keyword, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddBlockedKeywordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_blocked_keyword_edittext;
      TextInputEditText addBlockedKeywordEdittext = ViewBindings.findChildViewById(rootView, id);
      if (addBlockedKeywordEdittext == null) {
        break missingId;
      }

      id = R.id.add_blocked_keyword_hint;
      MyTextInputLayout addBlockedKeywordHint = ViewBindings.findChildViewById(rootView, id);
      if (addBlockedKeywordHint == null) {
        break missingId;
      }

      RelativeLayout dialogHolder = (RelativeLayout) rootView;

      return new DialogAddBlockedKeywordBinding((RelativeLayout) rootView,
          addBlockedKeywordEdittext, addBlockedKeywordHint, dialogHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
