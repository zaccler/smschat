// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.smsmessenger.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.smsmessenger.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAttachmentMediaPreviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProgressBar compressionProgress;

  @NonNull
  public final CoordinatorLayout mediaAttachmentHolder;

  @NonNull
  public final AppCompatImageView playIcon;

  @NonNull
  public final ItemRemoveAttachmentButtonBinding removeAttachmentButtonHolder;

  @NonNull
  public final ConstraintLayout threadAttachmentWrapper;

  @NonNull
  public final AppCompatImageView thumbnail;

  private ItemAttachmentMediaPreviewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProgressBar compressionProgress, @NonNull CoordinatorLayout mediaAttachmentHolder,
      @NonNull AppCompatImageView playIcon,
      @NonNull ItemRemoveAttachmentButtonBinding removeAttachmentButtonHolder,
      @NonNull ConstraintLayout threadAttachmentWrapper, @NonNull AppCompatImageView thumbnail) {
    this.rootView = rootView;
    this.compressionProgress = compressionProgress;
    this.mediaAttachmentHolder = mediaAttachmentHolder;
    this.playIcon = playIcon;
    this.removeAttachmentButtonHolder = removeAttachmentButtonHolder;
    this.threadAttachmentWrapper = threadAttachmentWrapper;
    this.thumbnail = thumbnail;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAttachmentMediaPreviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAttachmentMediaPreviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_attachment_media_preview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAttachmentMediaPreviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.compression_progress;
      ProgressBar compressionProgress = ViewBindings.findChildViewById(rootView, id);
      if (compressionProgress == null) {
        break missingId;
      }

      id = R.id.media_attachment_holder;
      CoordinatorLayout mediaAttachmentHolder = ViewBindings.findChildViewById(rootView, id);
      if (mediaAttachmentHolder == null) {
        break missingId;
      }

      id = R.id.play_icon;
      AppCompatImageView playIcon = ViewBindings.findChildViewById(rootView, id);
      if (playIcon == null) {
        break missingId;
      }

      id = R.id.remove_attachment_button_holder;
      View removeAttachmentButtonHolder = ViewBindings.findChildViewById(rootView, id);
      if (removeAttachmentButtonHolder == null) {
        break missingId;
      }
      ItemRemoveAttachmentButtonBinding binding_removeAttachmentButtonHolder = ItemRemoveAttachmentButtonBinding.bind(removeAttachmentButtonHolder);

      ConstraintLayout threadAttachmentWrapper = (ConstraintLayout) rootView;

      id = R.id.thumbnail;
      AppCompatImageView thumbnail = ViewBindings.findChildViewById(rootView, id);
      if (thumbnail == null) {
        break missingId;
      }

      return new ItemAttachmentMediaPreviewBinding((ConstraintLayout) rootView, compressionProgress,
          mediaAttachmentHolder, playIcon, binding_removeAttachmentButtonHolder,
          threadAttachmentWrapper, thumbnail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
